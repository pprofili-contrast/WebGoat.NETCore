trigger:
- master

resources:
- repo: self

stages:
- stage: Build
  displayName: Build image and run container
  jobs:
  - job: Build
    displayName: Build and run
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        docker build -f $(Build.SourcesDirectory)/Dockerfile.contrast -t dotnetcore-build:$BUILD_BUILDID .
        docker run -p 8181:80 --name webgoatdotnetcorewcontrast --rm -d dotnetcore-build:$BUILD_BUILDID    
        CONTAINER_ADDRESS=$(docker container inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}} {{end}}' webgoatdotnetcorewcontrast)
        echo ip is $CONTAINER_ADDRESS
#        curl -v http://172.17.0.2:8181
#    - script: 
#        docker stop webgoatdotnetcorewcontrast
#    - task: Docker@2
#      displayName: Build
#      inputs:
#        command: build
#        dockerfile: '$(Build.SourcesDirectory)/Dockerfile.contrast'
#        arguments: '-t webgoatdotnetcorewcontrast:latest'
#    - task: Docker@2
#      displayName: Login
#      inputs:
#        containerRegistry: 'Phil Docker Hub'
#        command: 'login'
#    - task: Docker@2
#      displayName: Push
#      inputs:
#        containerRegistry: 'Phil Docker Hub'
#        repository: 'webgoatdotnetcorewcontrast:latest'
#        command: 'push'
#- stage: Run
#  displayName: Run container
#  jobs:
#  - job: Run
#    displayName: Run
#    pool:
#      vmImage: ubuntu-latest
#    steps:
#    - task: Docker@2
#      displayName: Run a container
#      inputs:
#        command: start
#        dockerfile: '$(Build.SourcesDirectory)/Dockerfile.contrast'
#        arguments: 'webgoatdotnetcorewcontrast'
- stage: Verify
  jobs:
  - job: Verify
    pool: server
    steps: 
    - task: ContrastIntegration@2
      inputs:
        ContrastService: 'Contrast AppTwo'
        Application: '53c9d540-2cee-40a0-8a57-0552f8b917de'
        AppVersionFilter: '$(Build.BuildId)_$(Build.BuildNumber)'
        CriticalLimit: '0'
        HighLimit: '0'
        MediumLimit: '-1'
        LowLimit: '-1'
        NoteLimit: '-1'